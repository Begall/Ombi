# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  solution: '**/*.sln'
  testProj: '**/*.Tests.csproj'
  csProj: '**/*.csproj'
  buildConfiguration: 'Release'
  publishLocation: '$(Build.SourcesDirectory)src/Ombi/bin/Release/netcoreapp2.2/'

pool:
  vmImage: 'ubuntu-latest'


steps:

- task: CmdLine@2
  displayName: Run Build Script
  inputs:
    script: './build.sh --settings_skipverification=true'

- task: CopyFiles@2
  displayName: Upload Windows Build
  inputs:
    SourceFolder: '$(publishLocation)windows.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: CopyFiles@2
  displayName: Upload OSX Build
  inputs:
    SourceFolder: '$(publishLocation)osx.tar.gz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: CopyFiles@2
  displayName: Upload Linux Build
  inputs:
    SourceFolder: '$(publishLocation)linux.tar.gz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: CopyFiles@2
  displayName: Upload Linux-ARM Build
  inputs:
    SourceFolder: '$(publishLocation)linux-arm.tar.gz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: CopyFiles@2
  displayName: Upload Windows 32Bit Build
  inputs:
    SourceFolder: '$(publishLocation)windows-32bit.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: CopyFiles@2
  displayName: Upload Linux-ARM64 Build
  inputs:
    SourceFolder: '$(publishLocation)linux-arm64.tar.gz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true